ggplot(aes(x = Revenue, y = State, col = Rank)) +
geom_line() +
theme(legend.position = 'none') +
ggtitle("Higher revenue is represented by a brighter blue")
inc %>%
ggplot(aes(x = Revenue, y = State, col = Rank)) +
geom_line() +
theme(legend.position = 'none') +
ggtitle("Company Revenue")
inc$State[3]
fl <- complete.cases(inc[inc$State == "FL",])
fl_map <- map_data("state", region = "FL")
cities <- maps::us.cities
fl_cities <- cities[cities$country.etc == "FL",]
fl_cities$name <- sub(" .*", "", fl_cities$name)
colnames(fl_cities)[colnames(fl_cities) == "name"] <- "City"
merge(fl, fl_cities)
library(ggplot2)
library(dplyr)
file <- 'inc5000_data.csv'
inc <- read.csv(file, header= TRUE)
head(inc)
summary(inc)
# Insert your code here, create more chunks as necessary
inc %>%
ggplot(aes(x = Revenue, y = State, col = Rank)) +
geom_line() +
theme(legend.position = 'none') +
ggtitle("Company Revenue")
inc$State[3]
fl <- complete.cases(inc[inc$State == "FL",])
fl_map <- map_data("state", region = "FL")
cities <- maps::us.cities
fl_cities <- cities[cities$country.etc == "FL",]
fl_cities$name <- sub(" .*", "", fl_cities$name)
colnames(fl_cities)[colnames(fl_cities) == "name"] <- "City"
merge(fl, fl_cities)
inc$State[3]
fl <- inc[inc$State == "FL",]
fl_map <- map_data("state", region = "FL")
cities <- maps::us.cities
fl_cities <- cities[cities$country.etc == "FL",]
fl_cities$name <- sub(" .*", "", fl_cities$name)
colnames(fl_cities)[colnames(fl_cities) == "name"] <- "City"
merge(fl, fl_cities)
inc$State[3]
fl <- inc[inc$State == "FL",]
fl_map <- map_data("state", region = "FL")
cities <- maps::us.cities
fl_cities <- cities[cities$country.etc == "FL",]
fl_cities$name <- sub(" .*", "", fl_cities$name)
colnames(fl_cities)[colnames(fl_cities) == "name"] <- "City"
data <- merge(fl, fl_cities)
complete.cases(data)
ggplot() +
geom_polygon(data = fl_map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = data$long, y = data$lat)) +
theme_void()
ggplot() +
geom_polygon(data = fl_map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = data$long, y = data$lat, color = data$Industry)) +
theme_void()
ggplot() +
geom_polygon(data = fl_map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = data$long, y = data$lat, color = data$Industry, size = data$Employees)) +
theme_void()
ggplot() +
geom_polygon(data = fl_map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = data$long,
y = data$lat,
color = data$Industry,
size = data$Employees)) +
theme(legend.position = 'bottom')
theme_void()
ggplot() +
geom_polygon(data = fl_map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = data$long,
y = data$lat,
color = data$Industry,
size = data$Employees)) +
theme_void()
state = inc$State[3]
fl <- inc[inc$State == "FL",]
fl_map <- map_data("state", region = "FL")
cities <- maps::us.cities
fl_cities <- cities[cities$country.etc == "FL",]
fl_cities$name <- sub(" .*", "", fl_cities$name)
colnames(fl_cities)[colnames(fl_cities) == "name"] <- "City"
data <- merge(fl, fl_cities)
inc$State[3]
fl <- inc[inc$State == "FL",]
fl_map <- map_data("state", region = "FL")
cities <- maps::us.cities
fl_cities <- cities[cities$country.etc == "FL",]
fl_cities$name <- sub(" .*", "", fl_cities$name)
colnames(fl_cities)[colnames(fl_cities) == "name"] <- "City"
data <- merge(fl, fl_cities)
char(inc$State[3])
as.character(inc$State[3])
fl <- inc[inc$State == "FL",]
fl_map <- map_data("state", region = "FL")
cities <- maps::us.cities
fl_cities <- cities[cities$country.etc == "FL",]
fl_cities$name <- sub(" .*", "", fl_cities$name)
colnames(fl_cities)[colnames(fl_cities) == "name"] <- "City"
data <- merge(fl, fl_cities)
state = inc$State[3] %>% as.character()
st_inc <- inc[inc$State == state,]
st_map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", fl_cities$name)
state = inc$State[3] %>% as.character()
st_inc <- inc[inc$State == state,]
st_map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", cities$name)
colnames(cities)[colnames(cities) == "name"] <- "City"
data <- merge(st_inc, cities)
(state = inc$State[3] %>% as.character())
st_inc <- inc[inc$State == state,]
st_map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", cities$name)
colnames(cities)[colnames(cities) == "name"] <- "City"
data <- merge(st_inc, cities)
(state = inc$State[3] %>% as.character())
st_inc <- inc[inc$State == state,]
map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", cities$name)
colnames(cities)[colnames(cities) == "name"] <- "City"
data <- merge(st_inc, cities)
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = data$long,
y = data$lat,
color = data$Industry,
size = data$Employees)) +
theme_void()
x <- inc %>% group_by(State)
View(x)
x <- inc %>% group_by(State) %>% order_by(State)
x <- inc %>% order_by(State)
x <- inc %>% arrange(State)
x <- inc %>% arrange(State) %>%
count(State)
inc %>% count(State)
inc %>% count(State) %>% arrange(State)
inc %>% count(State) %>% arrange(n)
?arrange
inc %>% count(State) %>% arrange(n, desc())
inc %>% count(State) %>% desc(n)
inc %>% count(State) %>% arrange(n)
inc %>% count(State) %>% arrange(n)[-3]
inc %>% count(State) %>% as.list(arrange(n))[-3]
inc %>% count(State) %>% arrange(n)
inc %>% count(State) %>% arrange(n) %>% tail(5)
View(x)
inc %>% count(State) %>% arrange(n)[-3, 'State']
inc %>% count(State) %>% arrange(n)[-3, State]
inc %>% count(State) %>% arrange(n) %>% tail(5)
x <- inc %>% count(State) %>% arrange(n)
tail(x)
(state = x[-3,State] %>% as.character())
(state = x[length(x)-3, State] %>% as.character())
(state = x[length(x)-3, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", cities$name)
colnames(cities)[colnames(cities) == "name"] <- "City"
data <- merge(st_inc, cities)
(state = x[49, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
map <- map_data("state", region = state)
(state = x[50, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
map <- map_data("state", region = state)
map_data("state", region = 'NY')
map_data("state", region = 'CA')
map_data("state", region = 'ny')
map_data("state", region = 'MA')
map_data("state", region = 'MS')
map_data("state", region = 'NewYork')
map_data("state", region = 'NE')
?us_map
?map_data
(state = x[50, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
map <- map_data("state", region = state)
(state = x[50, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
#map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", cities$name)
colnames(cities)[colnames(cities) == "name"] <- "City"
data <- merge(st_inc, cities)
View(data)
(state = x[50, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
#map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", cities$name)
colnames(cities)[colnames(cities) == "name"] <- "City"
data <- merge(st_inc, cities, all=TRUE)
View(x)
(state = x[50, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
#map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", cities$name)
colnames(cities)[colnames(cities) == "name"] <- "City"
data <- merge(st_inc, cities, all.x = all)
(state = x[50, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
#map <- map_data("state", region = state)
cities <- maps::us.cities
cities <- cities[cities$country.etc == state,]
cities$name <- sub(" .*", "", cities$name)
colnames(cities)[colnames(cities) == "name"] <- "City"
data <- merge(st_inc, cities)
View(cities)
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = data$long,
y = data$lat,
color = data$Industry,
size = data$Employees)) +
theme_void()
(state = x[50, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
map <- map_data("state", region = state)
map_data
map_data("state", region = .)
map_data("state", region = ".")
map_data("state", region = "newyork")
map_data("state", region = "new_york")
inc
inc$State == 'NY'
inc[inc$State == 'NY',]
x <- inc %>% select(State = 'NY')
x <- inc %>% select(State == 'NY')
x <- inc %>% count(State) %>% arrange(n)
tail(x)
x <- inc %>% count(State) %>% arrange(n)
tail(x)
x <- inc %>% group_by(State) %>%
count(Name)
tail(x)
x <- inc %>% group_by(State) %>%
count(Name)
head(x)
x <- inc %>% count(State)
head(x)
x <- inc %>% count(State) %>% arrange(n)
head(x)
x <- inc %>% count(State) %>% arrange(n)
tail(x)
(state = x[50, 'State'] %>% as.character())
st_inc <- inc[inc$State == state,]
map <- map_data("state", region = state)
library(ggplot2)
library(dplyr)
library(cowplot)
library(stats)
library(reticulate)
use_python('/usr/bin/python3')
file <- 'inc5000_data.csv'
inc <- tibble(read.csv(file, header= TRUE))
inc <- inc[complete.cases(inc),]
head(inc)
summary(inc)
ggplot(data = inc) +
geom_bar(mapping = aes(y = Industry))
p1 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Employees)), bins = 25)
p2 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Revenue)), bins = 25)
plot_grid(p1, p2, ncol = 1)
p3 <- sapply(inc[,c(3,4,6)], log) %>% cbind(inc[,5]) %>%
pairs()
inc %>%
ggplot(aes(x = Revenue, y = State, col = Rank)) +
geom_line(size = 5) +
theme(legend.position = 'none') +
labs(x = '', y = '') +
ggtitle("Each bar represents a company, revenue by color")
summary(inc$State) %>% sort() %>% tail()
reticulate::repl_python()
summary(inc$State) %>% sort() %>% tail()
inc <- inc %>%
mutate(loc = paste0(City, ', ', State))
View(inc)
reticulate::repl_python()
reticulate::repl_python()
library(ggplot2)
library(dplyr)
library(cowplot)
library(stats)
library(reticulate)
use_python('/usr/bin/python3')
file <- 'inc5000_data.csv'
inc <- tibble(read.csv(file, header= TRUE))
inc <- inc[complete.cases(inc),]
head(inc)
summary(inc)
ggplot(data = inc) +
geom_bar(mapping = aes(y = Industry))
p1 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Employees)), bins = 25)
p2 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Revenue)), bins = 25)
plot_grid(p1, p2, ncol = 1)
p3 <- sapply(inc[,c(3,4,6)], log) %>% cbind(inc[,5]) %>%
pairs()
inc %>%
ggplot(aes(x = Revenue, y = State, col = Rank)) +
geom_line(size = 5) +
theme(legend.position = 'none') +
labs(x = '', y = '') +
ggtitle("Each bar represents a company, revenue by color")
summary(inc$State) %>% sort() %>% tail()
inc <- inc %>%
mutate(loc = paste0(City, ', ', State))
reticulate::repl_python()
library(ggplot2)
library(dplyr)
library(cowplot)
library(stats)
library(reticulate)
use_python('/usr/bin/python3')
file <- 'inc5000_data.csv'
inc <- tibble(read.csv(file, header= TRUE))
inc <- inc[complete.cases(inc),]
head(inc)
summary(inc)
ggplot(data = inc) +
geom_bar(mapping = aes(y = Industry))
p1 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Employees)), bins = 25)
p2 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Revenue)), bins = 25)
plot_grid(p1, p2, ncol = 1)
p3 <- sapply(inc[,c(3,4,6)], log) %>% cbind(inc[,5]) %>%
pairs()
inc %>%
ggplot(aes(x = Revenue, y = State, col = Rank)) +
geom_line(size = 5) +
theme(legend.position = 'none') +
labs(x = '', y = '') +
ggtitle("Each bar represents a company, revenue by color")
summary(inc$State) %>% sort() %>% tail()
inc <- inc %>%
mutate(loc = paste0(City, ', ', State))
reticulate::repl_python()
summary(inc$State) %>% sort() %>% tail()
inc <- inc %>%
mutate(loc = paste0(City, ', ', State))
ny <- inc %>% filter(State == 'NY')
reticulate::repl_python()
map <- map_data("state", region = 'New York')
#cities$name <- sub(" .*", "", cities$name)
#colnames(cities)[colnames(cities) == "name"] <- "City"
#data <- merge(st_inc, cities)
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
theme_void()
reticulate::repl_python()
x
python.x
y <- py_to_r(x)
py.x
py_get_item(x)
reticulate::repl_python()
py$x
py$x[1]
py$x[1][1]
py$x[1,1]
py$x[1]
py$x[1][1]
py$x[1][1][1]
py$x[1][[1]]
py$x[[1]][[1]]
py$x[[1]][[2]]
py_to_r(py$x)
View(ny)
cbind(ny, py$x)
tibble(py$x)
reticulate::repl_python()
View(ny)
reticulate::repl_python()
summary(inc$State) %>% sort() %>% tail()
inc <- inc %>%
mutate(loc = paste0(City, ', ', State))
ny <- inc %>% filter(State == 'NY')
ny['lat'] <- NA
ny['lon'] <- NA
View(ny)
reticulate::repl_python()
library(ggplot2)
library(dplyr)
library(cowplot)
library(stats)
library(reticulate)
use_python('/usr/bin/python3')
file <- 'inc5000_data.csv'
inc <- tibble(read.csv(file, header= TRUE))
inc <- inc[complete.cases(inc),]
head(inc)
summary(inc)
ggplot(data = inc) +
geom_bar(mapping = aes(y = Industry))
p1 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Employees)), bins = 25)
p2 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Revenue)), bins = 25)
plot_grid(p1, p2, ncol = 1)
p3 <- sapply(inc[,c(3,4,6)], log) %>% cbind(inc[,5]) %>%
pairs()
inc %>%
ggplot(aes(x = Revenue, y = State, col = Rank)) +
geom_line(size = 5) +
theme(legend.position = 'none') +
labs(x = '', y = '') +
ggtitle("Each bar represents a company, revenue by color")
summary(inc$State) %>% sort() %>% tail()
inc <- inc %>%
mutate(loc = paste0(City, ', ', State))
ny <- inc %>% filter(State == 'NY')
reticulate::repl_python()
map <- map_data("state", region = 'New York')
#cities$name <- sub(" .*", "", cities$name)
#colnames(cities)[colnames(cities) == "name"] <- "City"
#data <- merge(st_inc, cities)
ggplot() +
geom_polygon(data = map,
aes(x=py$longs, y=py$lats, group = group)) +
coord_fixed(1.3) +
theme_void()
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
theme_void()
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = py$longs, y = py$lats, color=ny$Industry, size = ny$Employees)) +
theme_void()
ggplot() +
geom_polygon(data = map,
aes(x=long, y=lat, group = group)) +
coord_fixed(1.3) +
geom_point(aes(x = py$longs, y = py$lats, color=ny$Industry, size = ny$Employees), show.legend = FALSE) +
theme_void()
reticulate::repl_python()
library(ggplot2)
library(dplyr)
library(cowplot)
library(stats)
library(reticulate)
use_python('/usr/bin/python3')
file <- 'inc5000_data.csv'
inc <- tibble(read.csv(file, header= TRUE))
inc <- inc[complete.cases(inc),]
head(inc)
summary(inc)
ggplot(data = inc) +
geom_bar(mapping = aes(y = Industry))
p1 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Employees)), bins = 25)
p2 <- ggplot(data = inc) +
geom_histogram(mapping = aes(x = log(Revenue)), bins = 25)
plot_grid(p1, p2, ncol = 1)
p3 <- sapply(inc[,c(3,4,6)], log) %>% cbind(inc[,5]) %>%
pairs()
inc %>%
ggplot(aes(x = Revenue, y = State, col = Rank)) +
geom_line(size = 5) +
theme(legend.position = 'none') +
labs(x = '', y = '') +
ggtitle("Each bar represents a company, revenue by color")
summary(inc$State) %>% sort() %>% tail()
inc <- inc %>%
mutate(loc = paste0(City, ', ', State))
ny <- inc %>% filter(State == 'NY')
reticulate::repl_python()
